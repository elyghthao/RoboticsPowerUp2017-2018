// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3588.PowerUp.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import org.usfirst.frc3588.PowerUp.subsystems.*;

/**
 *
 */
public class AutoRun extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public AutoRun() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    	if (AutonomousCommand.position.equals("L")) { //if on the left side of the alliance wall aka POSITION 1
    		addSequential(new DriveStraight(0.8, 8.0, 20.0)); //move forward to about 20 feet (will do math later), or move for 8.0 seconds. Should be adjacent to platform zone
    		addSequential(new Pivot(90.0, 0.6)); //turn 90 degrees to the right to face platform zone
    		addSequential(new DriveStraight(0.8, 2.0, 5.0)); //drive straight for about 5 feet or 2 seconds to be in platform zone and out of everyone's way
    	}
    	
    	
    	if (AutonomousCommand.position.equals("M")) { //if in POSITION 2 aka middle position
    		addSequential(new DriveStraight(0.8, 1.5, 5.0));//drive forward slightly
    		if (AutonomousCommand.gameData.substring(0,1).equals("L")) { //if the alliance switch is on the left side
    			addSequential(new Pivot(50.0, 0.6)); //after moving forward slightly, turn 50 degrees to the right
    			addSequential(new DriveStraight(0.8, 4.0, 12.0)); // move forward slightly to clear the switch and be have a clear path to the left
    			addSequential(new Pivot(-50.0, 0.6)); //turn left 40 degrees
    			addSequential(new DriveStraight(0.8, 5.0, 12.0)); // move forward to be adjacent to platform zone
    			addSequential(new Pivot(-90.0, 0.6)); //turn left 90 degrees to be face the platform zone
    		}
    		else if (AutonomousCommand.gameData.substring(0,1).equals("R")) {
    			addSequential(new Pivot(-50.0, 0.6)); //after moving forward, turn left 50 degrees
    			addSequential(new DriveStraight(0.8, 4.0, 12.0)); // move forward to clear the switch and have a clear path to the right
    			addSequential(new Pivot(50.0, 0.6)); //turn right 40 degrees
    			addSequential(new DriveStraight(0.8, 5.0, 12.0)); //move forward to be adjacent to platform zone
    			addSequential(new Pivot(90.0, 0.6)); //turn right 90 degrees to face platform zone
    		}
    		addSequential(new DriveStraight(0.8, 2.0, 5.0)); // move forward after doing ALL TURNING AND REPOSITIONING to be INSIDE the PLATFORM ZONE
    	}
    	
    	
    	if (AutonomousCommand.position.equals("R")) { // if on right side of the alliance wall aka POSITION 3
    		addSequential(new DriveStraight(0.8, 8.0, 20.0)); //move forward to clear the switch, about 20 feet approx.
    		addSequential(new Pivot(-90.0, 0.6)); // turn left 90 degrees to face the PLATFORM ZONE
    		addSequential(new DriveStraight(0.8, 2.0, 5.0)); //move forward about 5 feet to be inside PLATFORM ZONE
    	}

        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
 
    } 
}
