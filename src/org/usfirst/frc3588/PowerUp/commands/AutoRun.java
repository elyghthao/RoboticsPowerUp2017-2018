// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3588.PowerUp.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import org.usfirst.frc3588.PowerUp.subsystems.*;

/**
 *
 */
public class AutoRun extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public AutoRun(String position, String gameData) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    	if (AutonomousCommand.position.equals("L")) {
    		addSequential(new DriveStraight(0.8, 8.0, 20.0));
    		addSequential(new Pivot(90.0, 0.6));
    		addSequential(new DriveStraight(0.8, 2.0, 5.0));
    	}
    	if (AutonomousCommand.position.equals("M")) {
    		addSequential(new DriveStraight(0.8, 1.5, 5.0));
    		if (AutonomousCommand.gameData.substring(0,1).equals("L")) {
    			addSequential(new Pivot(50.0, 0.6));
    			addSequential(new DriveStraight(0.8, 4.0, 12.0));
    			addSequential(new Pivot( 40.0, 0.6));
    			addSequential(new DriveStraight(0.8, 5.0, 12.0));
    			addSequential(new Pivot( -90.0, 0.6));
    		}
    		else if (AutonomousCommand.gameData.substring(0,1).equals("R")) {
    			addSequential(new Pivot(50.0, 0.6));
    			addSequential(new DriveStraight(0.8, 4.0, 12.0));
    			addSequential(new Pivot( 40.0, 0.6));
    			addSequential(new DriveStraight(0.8, 5.0, 12.0));
    			addSequential(new Pivot( 90.0, 0.6));
    		}
    		addSequential(new DriveStraight(0.8, 2.0, 5.0));
    	}
    	if (AutonomousCommand.position.equals("R")) {
    		addSequential(new DriveStraight(0.8, 8.0, 20.0));
    		addSequential(new Pivot( -90.0, 0.6));
    		addSequential(new DriveStraight(0.8, 2.0, 5.0));
    	}

        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
 
    } 
}
